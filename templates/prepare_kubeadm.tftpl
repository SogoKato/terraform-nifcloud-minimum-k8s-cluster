# DNS
sed -i -e 's/^DNS=127.0.0.1$/DNS=8.8.8.8/' /etc/systemd/resolved.conf
systemctl restart systemd-resolved.service

#####
# Forwarding IPv4 and letting iptables see bridged traffic
#  see: https://kubernetes.io/docs/setup/production-environment/container-runtimes/#install-and-configure-prerequisites
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

# sysctl params required by setup, params persist akbueacross reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sysctl --system

#####
# Disable swap
#  see: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#before-you-begin
swapoff -a
sed -i '/ swap / s/^/#/' /etc/fstab

#####
# Install containerd
#

# containerd
wget https://github.com/containerd/containerd/releases/download/v${v_containerd}/containerd-${v_containerd}-linux-amd64.tar.gz
tar Cxzvf /usr/local containerd-${v_containerd}-linux-amd64.tar.gz
mkdir -p /usr/local/lib/systemd/system
curl https://raw.githubusercontent.com/containerd/containerd/main/containerd.service > /usr/local/lib/systemd/system/containerd.service
systemctl daemon-reload
systemctl enable --now containerd

# runc
wget https://github.com/opencontainers/runc/releases/download/${v_runc}/runc.amd64
install -m 755 runc.amd64 /usr/local/sbin/runc

# cni
wget https://github.com/containernetworking/plugins/releases/download/${v_cni_plugins}/cni-plugins-linux-amd64-v1.2.0.tgz
mkdir -p /opt/cni/bin
tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-${v_cni_plugins}.tgz

wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-${v_cri_tools}-linux-amd64.tar.gz
tar zxvf crictl-${v_cri_tools}-linux-amd64.tar.gz -C /usr/local/bin
rm -f crictl-${v_cri_tools}-linux-amd64.tar.gz
echo 'runtime-endpoint: unix:///run/containerd/containerd.sock' > /etc/crictl.yaml

mkdir -p /etc/containerd/
containerd config default > /etc/containerd/config.toml
sed -i -e 's/SystemdCgroup = false/SystemdCgroup = true/'  /etc/containerd/config.toml

systemctl restart containerd

#####
# kubeadm
#  see: https://kubernetes.io/ja/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

apt-get update && apt-get install -y apt-transport-https curl
echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

apt-get update
apt-get install -y kubelet=${v_k8s} kubeadm=${v_k8s} kubectl=${v_k8s}
apt-mark hold kubelet kubeadm kubectl

systemctl enable kubelet && systemctl start kubelet
